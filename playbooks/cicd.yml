---
- name: CICD
  hosts: localhost
  tasks:
    - debug:
        msg: ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CICD Workflow section STARTED <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"

    - name: Create  projects
      command: "oc new-project {{ item }}"
      with_items:
        - "cicd-dev --description='Jenkins' --display-name='Jenkins'"
        - "tasks-build --description='Building' --display-name='Building'"
        - "tasks-dev --description='Development' --display-name='Development'"
        - "tasks-test --description='Testing' --display-name='Testing'"
        - "tasks-prod --description='Production' --display-name='Production'"

    - name: Setup Jenkins
      command: "oc new-app jenkins-persistent  --param MEMORY_LIMIT=4Gi --param VOLUME_CAPACITY=4Gi -p ENABLE_OAUTH=true -e JENKINS_PASSWORD=jenkins -n cicd-dev"

    - name: Add policy to the jenkins
      command: "oc policy add-role-to-user edit system:serviceaccount:cicd-dev:jenkins -n {{ item }}"
      with_items:
        - "tasks-build" 
        - "tasks-dev"
        - "tasks-test"
        - "tasks-prod"   

    - name: Enable the pulling of images from build  to the dev, test and prod
      command: "{{ item }}"
      with_items:
        - "oc policy add-role-to-group system:image-puller system:serviceaccounts:tasks-dev -n tasks-build"
        - "oc policy add-role-to-group system:image-puller system:serviceaccounts:tasks-test -n tasks-build"
        - "oc policy add-role-to-group system:image-puller system:serviceaccounts:tasks-prod -n tasks-build"



    - name: Setup pipeline buildconfig file
      template: 
        src: ../templates/tasks_buildconfig.j2
        dest: /tmp/tasks_buildconfig.yml

    - name: Create the pipeline
      command: "oc create -f /tmp/tasks_buildconfig.yml -n cicd-dev"

    - name: Start the Pipeline
      command: "oc start-build bc/tasks-bc -n cicd-dev"

    - name: Check Pipeline is Started 
      shell: oc get pods -n  cicd-dev | grep maven | tail -1
      register: result
      until: result.stdout.find("Running") != -1
      retries: 30
      delay: 30

    - name: Check App is being built on tasks-build
      shell: oc get pods -n  tasks-build | grep tasks
      register: result  
      until: result.stdout.find("Completed") != -1
      retries: 300
      delay: 10

    - name: Check App is being deployed on tasks-dev
      shell: oc get pods -n  tasks-dev | grep tasks | grep -v deploy
      register: result
      until: result.stdout.find("Running") != -1
      retries: 300
      delay: 10

    - name: Check App is beeing deployed  on tasks-test
      shell: oc get pods -n  tasks-test | grep tasks | grep -v deploy
      register: result
      until: result.stdout.find("Running") != -1
      retries: 300
      delay: 10

    - name: Check App is beeing deployed  on tasks-prod
      shell: oc get pods -n  tasks-prod | grep tasks | grep -v deploy
      register: result
      until: result.stdout.find("Running") != -1
      retries: 300
      delay: 10 

          
    - name: Get Route of App on tasks-prod
      shell: oc get route | tail -1 | awk '{print $2}'
      register: route

    - name: Download page from tasks-prod
      get_url:
       url: http://{{ route }}
       dest: /dev/null
   
    - debug:
        msg: ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CICD Workflow section FINISHED <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"

